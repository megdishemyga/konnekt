version: '3'

services:
  mongodb:
    restart: always
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: myga-dev
      MONGO_INITDB_ROOT_PASSWORD: myga-dev
    ports:
      - "27017:27017"

  # ui url : http://localhost:2818/
  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongodb"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "myga-dev"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "myga-dev"
    depends_on:
      - mongodb
    ports:
      - "2818:8081"

  # AWS S3 (using Minion for local development)
  # ui url :  http://localhost:9005
  minio:
    image: minio/minio
    restart: always
    container_name: s3-container
    environment:
      MINIO_ACCESS_KEY: mynv_access_key
      MINIO_SECRET_KEY: mynv_secret_key
    ports:
      - "9005:9005"
    command: server /data --console-address ":9005"

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  # ui url : http://localhost:9090/
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8081"
    ports:
      - "9090:8080"
    links:
      - kafka
      - schema-registry